<main class="game-detail-container">
  <h1>{{game.title}}</h1>

  <div class="game-info">
    <p><strong>Sport:</strong> {{game.sport}}</p>
    <p><strong>Venue:</strong> {{game.venue}}</p>
    <p><strong>Location:</strong> {{game.location}}</p>
    <p><strong>Date & Time:</strong>
      {{formatDate game.startTime}} |
      {{formatTime game.startTime}} – {{formatTime game.endTime}}
    </p>
    <p><strong>Description:</strong> {{game.description}}</p>
    <p><strong>Players:</strong> {{game.playersGoing}} / {{game.playersRequired}}</p>

    <p><strong>Hosted By:</strong>
      <a href="/profile/view/{{game.host._id}}" class="host-link">{{game.host.username}}</a>
    </p>

    {{#if joinedPlayers.length}}
    <p><strong>Players Joined:</strong></p>
    <ul>
      {{#each joinedPlayers}}
      <li>
        <a href="/profile/userview/{{this._id}}" class="player-link">{{this.username}}</a>
      </li>
      {{/each}}
    </ul>
    {{/if}}



  </div>

  {{#if error}}
  <div class="error-message"
    style="color: red; background: #fbe9e9; padding: 10px; border: 1px solid #ff0000; margin-bottom: 10px;">
    {{error}}
  </div>
  {{/if}}

  <div class="action-btn" style="margin-top: 20px;">
    {{#if isLoggedIn}}
    {{#if (eq userId hostId)}}
    <!-- Host actions -->
    <a href="/host/edit/{{game._id}}" class="btn btn-warning" style="margin-right: 10px;">Edit</a>
    <form action="/host/delete/{{game._id}}" method="POST" style="display:inline;">
      <button type="submit" class="btn btn-danger">Delete</button>
    </form>
    {{else if hasJoined}}
    <!-- Joined user can leave -->
    <form method="POST" action="/join/leave/{{game._id}}">
      <button type="submit" class="btn btn-secondary">Leave Game</button>
    </form>
    {{else if (gte (length game.players) game.playersRequired)}}
    <!-- Session full and not joined -->
    <p class="full-session">🚫 Session is Full</p>
    {{else}}
    <!-- Available to join -->
    <form method="POST" action="/join">
      <input type="hidden" name="gameId" value="{{game._id}}">
      <button type="submit" class="btn btn-primary">Join Game</button>
    </form>
    {{/if}}
    {{else}}
    <!-- Not logged in -->
    <a href="/login?redirect=/join/{{game._id}}" class="btn btn-secondary">Login to Join</a>
    {{/if}}
  </div>




<!-- chat Toggle Button -->
{{#if hasJoined}}
  <!-- Toggle Button -->
  <button id="toggleChatBtn" class="btn btn-outline-primary">💬 Open Chat</button>

  <!-- Chat UI -->
  <section id="chatSection" style="display: none; margin-top: 15px;">
    <h3>🗨️ Game Chat</h3>

    <!-- Chat Messages -->
    <div id="chatBox" class="chat-box"
         style="height: 250px; overflow-y: auto; border: 1px solid #ccc; background: #f9f9f9; padding: 10px;"></div>

    <!-- Chat Form -->
    <form id="chatForm" style="display: flex; margin-top: 10px;">
      <input type="text" id="chatMessage" placeholder="Type your message..." required
             style="flex: 1; padding: 5px;" />
      <button type="submit" class="btn btn-success btn-sm" style="margin-left: 5px;">Send</button>
    </form>

    <!-- Chat Ended Message -->
    <div id="chatEndedMessage" style="display: none; margin-top: 10px; color: red; font-weight: bold;">
      🚫 This chat has ended as the game is over.
    </div>
  </section>

  <!-- Socket.IO Logic -->
<script src="/socket.io/socket.io.js"></script>
<script>
  const socket = io();
  const gameId = "{{game._id}}";
  const username = "{{username}}";

  const toggleBtn = document.getElementById("toggleChatBtn");
  const chatSection = document.getElementById("chatSection");
  const chatBox = document.getElementById("chatBox");
  const chatForm = document.getElementById("chatForm");
  const chatInput = document.getElementById("chatMessage");
  const endedMsg = document.getElementById("chatEndedMessage");

  toggleBtn.addEventListener("click", () => {
    chatSection.style.display = chatSection.style.display === "none" ? "block" : "none";
  });

  // Join chat room and ask server for past messages
  socket.emit("joinGameChat", { gameId, userId: "{{userId}}" });

  // Load previously saved messages from DB
  socket.on("previousMessages", (messages) => {
    messages.forEach((msg) => {
      const time = new Date(msg.timestamp).toLocaleTimeString([], {
        hour: "2-digit",
        minute: "2-digit"
      });
      const msgDiv = document.createElement("div");
      msgDiv.innerHTML = `<strong>${msg.username}:</strong> ${msg.message} <small style="color:gray;">${time}</small>`;
      chatBox.appendChild(msgDiv);
    });
    chatBox.scrollTop = chatBox.scrollHeight;
  });

  // Show live incoming messages
  socket.on("receiveMessage", (msg) => {
    const msgDiv = document.createElement("div");
    msgDiv.innerHTML = `<strong>${msg.username}:</strong> ${msg.message} <small style="color:gray;">${msg.time}</small>`;
    chatBox.appendChild(msgDiv);
    chatBox.scrollTop = chatBox.scrollHeight;
  });

  // Disable chat when session expires
  socket.on("chatClosed", () => {
    chatForm.style.display = "none";
    endedMsg.style.display = "block";
  });

  // Handle message submission
  chatForm.addEventListener("submit", (e) => {
    e.preventDefault();
    const msg = chatInput.value.trim();
    if (!msg) return;
    socket.emit("sendMessage", { gameId, username, message: msg });
    chatInput.value = "";
  });
</script>
{{/if}}

</main>